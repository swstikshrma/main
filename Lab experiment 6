#include<stdio.h>
#include <stdlib.h>d
#define SIZE 100
int queue[SIZE], front=-1, rear =-1 ;
int isEmpty(){
    return (front == -1) ? 1 : 0; // Fixed return statement
}
int isFull(){
    return (rear==SIZE-1) ? 1 : 0;
}
void enqueue(int data){
    queue[++rear]=data;
    if(front==-1)
        front=rear;
    printf("Element Inserted!!\n");
}
int dequeue(){
    int data=queue[front];       
    if(front==rear)
        front=rear=-1;
    else
        front++;
    return data;
}
int peek(){
    return queue[front];
}
void display(){
    printf("Queue Elements are : \n");
    for(int i=front; i<=rear; i++){
        printf("%d ", queue[i]); // Fixed format specifier
    }
    printf("\n"); // Added newline for better output formatting
}
int main(){
    while(1){
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        int choice, data;
        printf("Enter choice :");
        scanf("%d", &choice);
        switch(choice){
            case 1:
                if(isFull())
                    printf("Queue Overflow!!\n");
                else{
                    printf("Enter element :");
                    scanf("%d", &data);
                    enqueue(data);
                }
                break;
            case 2:
                if(isEmpty())
                    printf("Queue Underflow!!\n");
                else
                    printf("%d is dequeued from the queue\n", dequeue());
                break;
            case 3:
                if(isEmpty())
                    printf("Queue is empty!!\n");
                else
                    printf("Element available in front of queue is %d\n", peek());
                break;
            case 4:
                if(isEmpty())
                    printf("Queue is empty!!\n");
                else
                    display();
                break;
            default:
                printf("Invalid choice!!!!\n"); // Moved to default case
        }
        printf("\n");
    }
}
